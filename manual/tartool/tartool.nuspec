<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>tartool</id>
    <version>1.0.0</version>
    <packageSourceUrl>https://github.com/ferventcoder/chocolatey-packages</packageSourceUrl>
    <owners>Rob Reynolds</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>TarTool</title>
    <authors>Senthil Rajasekharan</authors>
    <projectUrl>https://tartool.codeplex.com/</projectUrl>
    <!--<iconUrl>http://cdn.rawgit.com/__REPLACE_YOUR_REPO__/master/icons/test.png</iconUrl>-->
    <copyright>2009 Senthil Rajasekharan</copyright>
    <licenseUrl>https://tartool.codeplex.com/license</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://tartool.codeplex.com/SourceControl/latest</projectSourceUrl>
    <!--<docsUrl>At what url are the software docs located?</docsUrl>-->
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>tartool tar untar archive</tags>
    <summary>TarTool is a simple windows command line tool to uncompress and untar .tar.gz (.tgz) files.</summary>
    <description>A simple windows command line tool 

- to uncompress and untar .tar.gz (.tgz) files 
or
-just untar .tar files

`C:\>TarTool.exe`

Usage : `C:\>TarTool.exe sourceFile destinationDirectory`

`C:\>TarTool.exe D:\sample.tar.gz ./`

`C:\>TarTool.exe sample.tgz temp`

`C:\>TarTool.exe -x sample.tar temp`

More details are on this post --http://blog.rajasekharan.com/2009/01/16/tartool-windows-tar-gzip-tgz-extraction-tool/

TarTool 2.0 Beta supports bzip2 decompression for files with extensions like tar.bz2 and .bz2.

`TarTool -xj sample.tar.bz2 temp`
or
`TarTool -j sample.bz2`

http://tartool.codeplex.com/releases/view/85391

**Note:** TarTool uses SharpZipLib 

See licensing terms of SharpZipLib before reusing this code in one of your projects.
http://www.icsharpcode.net/OpenSource/SharpZipLib/</description>
    <!-- <releaseNotes>__REPLACE_OR_REMOVE__MarkDown_Okay</releaseNotes> -->
    <!-- =============================== -->      
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>